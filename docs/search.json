[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 ricv authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Xavier Adam. Author, maintainer. Kyle Wetton. Contributor, copyright holder.            image-compare-viewer library","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Adam X (2022). ricv: Create Interactive Image Comparator 'image-compare-viewer' Javascript Library. R package version 0.1.0, https://github.com/xvrdm/ricv.","code":"@Manual{,   title = {ricv: Create Interactive Image Comparator with the 'image-compare-viewer' Javascript Library},   author = {Xavier Adam},   year = {2022},   note = {R package version 0.1.0},   url = {https://github.com/xvrdm/ricv}, }"},{"path":"/index.html","id":"ricv","dir":"","previous_headings":"","what":"Create Interactive Image Comparator with the image-compare-viewer Javascript Library","title":"Create Interactive Image Comparator with the image-compare-viewer Javascript Library","text":"ricv lets create interactive image comparators R. works Rmarkdown documents Shiny application. hood, just tiny wrapper around image-compare-viewer Javascript Library.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create Interactive Image Comparator with the image-compare-viewer Javascript Library","text":"","code":"devtools::install_github(\"xvrdm/ricv\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Create Interactive Image Comparator with the image-compare-viewer Javascript Library","text":"","code":"library(ricv) ricv(img1 = \"mountains.jpg\", img2 = \"trees.jpg\",      options = list(addCircle = T, hoverStart = T))"},{"path":"/index.html","id":"css","dir":"","previous_headings":"","what":"CSS","title":"Create Interactive Image Comparator with the image-compare-viewer Javascript Library","text":"ricv() function also argument named css, expect list format: can used modify look labels. However, remember actual display labels driven one options.","code":"list(both = \"some-css-for-both-label\",      before = \"some-css-for-both-label\"      after = \"some-css-for-the-after-label\") ricv(   img1 = \"mountains.jpg\", img2 = \"trees.jpg\",   options = list(showLabels = T),   css = list(both = \"padding: 40px;\",               before = \"font-size: 2rem;\",               after = \"font-size: 4rem; font-family: serif;\") )"},{"path":"/index.html","id":"options","dir":"","previous_headings":"","what":"Options","title":"Create Interactive Image Comparator with the image-compare-viewer Javascript Library","text":"don´t want create hand options list accepted ricv(), can use helper function ricv_opts(), gives autocomplete convenient reminder possible attributes. reference, see possible options. image-compare-viewer examples .","code":"ricv::ricv_opts()  ## $controlColor ## [1] \"#FFFFFF\" ##  ## $controlShadow ## [1] TRUE ##  ## $addCircle ## [1] TRUE ##  ## $addCircleBlur ## [1] TRUE ##  ## $showLabels ## [1] TRUE ##  ## $smoothing ## [1] TRUE ##  ## $smoothingAmount ## [1] 200 ##  ## $hoverStart ## [1] FALSE ##  ## $verticalMode ## [1] FALSE ##  ## $startingPoint ## [1] 50 ##  ## $fluidMode ## [1] FALSE ##  ## $labelOptions ## $labelOptions$before ## [1] \"Before\" ##  ## $labelOptions$after ## [1] \"After\" ##  ## $labelOptions$onHover ## [1] TRUE"},{"path":"/reference/ricv-shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny bindings for ricv — ricv-shiny","title":"Shiny bindings for ricv — ricv-shiny","text":"Output render functions using ricv within Shiny applications interactive Rmd documents.","code":""},{"path":"/reference/ricv-shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny bindings for ricv — ricv-shiny","text":"","code":"ricvOutput(outputId, width = \"100%\", height = \"400px\")  renderRicv(expr, env = parent.frame(), quoted = FALSE)"},{"path":"/reference/ricv-shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny bindings for ricv — ricv-shiny","text":"outputId output variable read width, height Must valid CSS unit (like '100%', '400px', 'auto') number, coerced string 'px' appended. expr expression generates ricv env environment evaluate expr. quoted expr quoted expression (quote())? useful want save expression variable.","code":""},{"path":"/reference/ricv.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an interactive image comparator — ricv","title":"Create an interactive image comparator — ricv","text":"function creates interactive image comparator. See website underlying project examples: https://image-compare-viewer.netlify.app/","code":""},{"path":"/reference/ricv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an interactive image comparator — ricv","text":"","code":"ricv(img1, img2, options = NULL, css = NULL)"},{"path":"/reference/ricv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an interactive image comparator — ricv","text":"img1 path image file. image placed left (.e. '' image). img2 path image file. image placed right (.e. '' image). options list image-compare-viewer options. See documentation options. css list 3 optional attributes ('', '' ''), containing CSS style attributes targeting label corresponding used attribute name.","code":""},{"path":[]},{"path":"/reference/ricv_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create ricv options — ricv_opts","text":"","code":"ricv_opts(   labelOptionsBefore = \"Before\",   labelOptionsAfter = \"After\",   labelOptionsOnHover = TRUE,   controlColor = \"#FFFFFF\",   controlShadow = TRUE,   addCircle = TRUE,   addCircleBlur = TRUE,   showLabels = TRUE,   smoothing = TRUE,   smoothingAmount = 200,   hoverStart = FALSE,   verticalMode = FALSE,   startingPoint = 50,   fluidMode = FALSE )"},{"path":"/reference/ricv_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create ricv options — ricv_opts","text":"labelOptionsBefore character string '' label. labelOptionsAfter character string '' label. labelOptionsOnHover logical. Whether show labels hover. controlColor character string representing hex color (e.g. \"#FFFFFF\") control line/arrows. controlShadow logical. Whether add shadow control line/arrows. addCircle logical. Whether add circle around control line/arrows. addCircleBlur logical. Whether add blur circle around control line/arrows. showLabels logical. Whether show ''/'' labels (see also labelOptions... arguments). smoothing logical. Whether smooth (.e. dampen) movement control line/arrows. smoothingAmount numeric value. Set amount smoothing. hoverStart logical. Whether activate click-less control. verticalMode logical. Whether set control vertical mode. startingPoint numeric value. Represent percentage line start (e.g. '50' means middle 50 fluidModeA logical. Fluid mode enables container fluid height width, independent , useful using Image Compare Viewer full screen container instance. image dynamically cropped using CSS background 'cover' property. list options can used `options` argument ricv  function helps create list options ricv can accept. None mandatory. One can also create list hand, function just meant help remember possible attributes.","code":""}]
